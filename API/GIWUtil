local version = "1.05"

local facing = {NORTH = 0, EAST = 1, SOUTH = 2, WEST = 3}
local direction = {FORWARD = 0, DOWN = 1, UP = 2}

local level
local program
local msgType = {}

local configData

local dependAPI = {"GIWCore"}

function init()
  validateDepend()
  setPath()
  loadConfig()
  setValue("facing", facing)
  setValue("direction", direction)
  setValue("msgType", msgType)
end

function validateDepend()
  local need = {}
  for key, var in pairs(dependAPI) do
    if (getfenv()[var] == nil) then 
      table.insert(need, dependAPI[key])
    end
  end
  if (#need ~= 0) then
    str = table.concat(need, ", ")
    error("Need API : "..str)
  end
end

function setPath()
  local names = GIWCore.getAPInames()
  if (names == nil) then
    error("Initialize failed.")
  end
  configData = "/config/"..names[#names].."_config"
end

function loadConfig()
  if (not fs.exists(configData)) then
    createConfigFile()
  end
  local keys = {"Message:"}
  for line in io.lines(configData) do
    local data = GIWCore.readConfig(line, keys)
    setConfig(data)
  end
end

function setConfig(data)
  if (data.key == "Message:") then
    for key, var in pairs(data.contents) do
      msgType[key] = var
    end
  end
end

function createConfigFile()
  file = fs.open(configData, "w")
  file.writeLine(" -- Message display settings -- ")
  file.writeLine("Message:INFO = true")
  file.writeLine("Message:MAP = true")
  file.writeLine("Message:ROUTE = false")
  file.writeLine("Message:DEBUG = false")
  file.writeLine("Message:ERROR = true")
  file.close()
end

function setValue(key, var)
  local ft = _G
  ft[key] = var
end

function message(msg, flag)
  if (flag) then print(msg) end
end

function iomessage(msg, flag)
  if (flag) then io.write(msg) end
end

function msgSleep(num, flag)
  if (flag) then sleep(num) end
end

function isContains(ref, tbl, switch)
  for key, var in ipairs(tbl) do
    if (isIdenticalItem(ref, var, switch)) then
      return true
    end
  end
  return false
end

init()